cmake_minimum_required(VERSION 3.22)
project(r3c LANGUAGES C CXX ASM)

# ==========================================================
# üß≠ Global Build Settings
# ==========================================================
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

# ==========================================================
# ‚öôÔ∏è OS-Specific Optimizations
# ==========================================================
if(WIN32)
  message(STATUS "ü™ü Windows build ‚Üí dynamic CRT")
  add_compile_options(/O2 /DNDEBUG /EHsc)
  add_link_options(/OPT:REF /OPT:ICF)

elseif(APPLE)
  message(STATUS "üçé macOS build ‚Üí safe flags (keep symbols)")
  add_compile_options(-O2 -pipe -DNDEBUG -fno-exceptions -fno-rtti)
  add_link_options(-Wl,-dead_strip)

elseif(UNIX)
  message(STATUS "üêß Linux build ‚Üí static link & stripped binary")
  add_compile_options(-O2 -pipe -s -DNDEBUG -fno-exceptions -fno-rtti)
  add_link_options(-s -static-libgcc -static-libstdc++)
endif()

# ==========================================================
# üß© Directories
# ==========================================================
set(SRC_DIR "${CMAKE_SOURCE_DIR}/src")
set(INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
include_directories(${INCLUDE_DIR})

# ==========================================================
# üìÅ Source Collection
# ==========================================================
# Î™®Îì† cpp/c/asm ÌååÏùºÏùÑ ÏûêÎèô ÏàòÏßë
file(GLOB_RECURSE R3C_SOURCES
  "${SRC_DIR}/*.cpp"
  "${SRC_DIR}/*.c"
  "${SRC_DIR}/*.S"
  "${SRC_DIR}/*.asm"
)

# main.cppÎäî Ïã§Ìñâ ÌÉÄÍ≤üÏóêÏÑúÎßå ÏÇ¨Ïö©ÌïòÎØÄÎ°ú Ï†úÏô∏
list(FILTER R3C_SOURCES EXCLUDE REGEX ".*/main\\.cpp$")

# ==========================================================
# üß± Library Target
# ==========================================================
add_library(r3c STATIC ${R3C_SOURCES})
set_target_properties(r3c PROPERTIES LINKER_LANGUAGE CXX)

if(UNIX AND NOT WIN32)
  target_link_libraries(r3c pthread dl m)
endif()

# ==========================================================
# üöÄ Executable Target (CLI)
# ==========================================================
set(MAIN_SRC "${SRC_DIR}/main.cpp")

if(EXISTS ${MAIN_SRC})
  add_executable(r3c_cli ${MAIN_SRC})
  target_link_libraries(r3c_cli PRIVATE r3c)
else()
  message(FATAL_ERROR "‚ùå main.cpp not found in ${SRC_DIR}")
endif()

if(APPLE)
  set_target_properties(r3c_cli PROPERTIES
    XCODE_ATTRIBUTE_ARCHS "arm64;x86_64"
    MACOSX_BUNDLE_GUI_IDENTIFIER "com.r3c.compiler"
  )
endif()

# ==========================================================
# üì¶ Install Targets
# ==========================================================
install(TARGETS r3c DESTINATION lib)
install(TARGETS r3c_cli DESTINATION bin)

# ==========================================================
# üßæ Summary
# ==========================================================
message(STATUS "")
message(STATUS "==========================================================")
message(STATUS " üß© R3C LLVM-Free Build Summary (v6.6 LTS Stable)")
message(STATUS "----------------------------------------------------------")
message(STATUS " ‚Ä¢ Build Type     : ${CMAKE_BUILD_TYPE}")
message(STATUS " ‚Ä¢ Source Dir     : ${SRC_DIR}")
message(STATUS " ‚Ä¢ Include Dir    : ${INCLUDE_DIR}")
message(STATUS " ‚Ä¢ Output Library : ${CMAKE_BINARY_DIR}/libr3c.a")
message(STATUS " ‚Ä¢ Executable     : ${CMAKE_BINARY_DIR}/r3c_cli")
message(STATUS "==========================================================")
message(STATUS "")
