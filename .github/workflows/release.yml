name: R3C Auto Packaging & Release

on:
  push:
    tags:
      - "v*"

jobs:
  package:
    name: Package R3C for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then choco install nasm cmake -y; fi
          if [ "$RUNNER_OS" == "Linux" ]; then sudo apt-get update && sudo apt-get install -y nasm cmake fakeroot dpkg-dev; fi
          if [ "$RUNNER_OS" == "macOS" ]; then brew install nasm cmake; fi

      - name: Configure & Build
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release -j4

      - name: Package (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p pkg/r3c/usr/local/bin
          cp build/r3c pkg/r3c/usr/local/bin/
          mkdir -p pkg/r3c/DEBIAN
          cat > pkg/r3c/DEBIAN/control <<EOF
          Package: r3c
          Version: ${GITHUB_REF_NAME#v}
          Section: devel
          Priority: optional
          Architecture: amd64
          Maintainer: R3C Team <r3c@example.com>
          Description: Rustâ†’NASM Transpiler + Bootstrap Compiler
          EOF
          dpkg-deb --build pkg/r3c r3c-${GITHUB_REF_NAME#v}-linux-amd64.deb

      - name: Package (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p dist
          tar -czvf dist/r3c-${GITHUB_REF_NAME#v}-macos-universal.tar.gz -C build r3c

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          mkdir -p dist
          zip -j dist/r3c-${GITHUB_REF_NAME#v}-windows-x64.zip build/Release/r3c.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            *.deb
            dist/*.zip
            dist/*.tar.gz

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download all packages
        uses: actions/download-artifact@v4
        with:
          path: ./packages

      - name: Generate release notes
        run: |
          echo "R3C Release $(date)" > release_notes.txt
          echo "" >> release_notes.txt
          git log -1 --pretty=format:"%h - %s (%an)" >> release_notes.txt

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.txt
          files: packages/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
