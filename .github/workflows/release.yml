# =========================================================
# 🚀 R3C Cross-Platform Build & Auto Semantic Release (v3)
# Safe Stub Generator + Smart Version + Artifact Upload
# =========================================================

name: R3C Cross-Platform Build & Release

on:
  push:
    tags:
      - 'v*'  # e.g., v1.0.0, v2.1.3
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 🧩 Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 🧰 Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: 🧱 Configure Build
        run: |
          echo "⚙️ Building on $RUNNER_OS..."
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: 🔨 Build Project
        run: |
          cmake --build build --config Release --parallel 4

      - name: 🧪 Run Tests
        run: |
          cd build
          ctest --output-on-failure || echo "No tests or non-critical errors."

      - name: 📦 Archive Build Artifacts
        if: success()
        run: |
          mkdir -p release_artifacts
          cp -r build/r3c* release_artifacts/ || true
          cp -r build/bin/* release_artifacts/ || true
        shell: bash

      - name: 📤 Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: release_artifacts/

  release:
    name: 🚀 Auto Semantic Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧠 Setup Node (for semantic-release)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ⚙️ Install Dependencies
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: 🚀 Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release || echo "⚠️ Semantic release skipped (no new commits)."
