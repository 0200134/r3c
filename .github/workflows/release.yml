name: R3C Auto Release + Package Update

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build & Package on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Clean build directory
        shell: bash
        run: |
          rm -rf build || true

      - name: Setup NASM
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then choco install nasm -y; fi
          if [ "$RUNNER_OS" == "Linux" ]; then sudo apt-get update && sudo apt-get install -y nasm; fi
          if [ "$RUNNER_OS" == "macOS" ]; then brew install nasm; fi

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Configure and build
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -- -j4

      - name: Package artifacts
        shell: bash
        run: |
          mkdir -p dist
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp build/Release/r3c.exe dist/r3c-win64.exe
          elif [ "$RUNNER_OS" == "Linux" ]; then
            cp build/r3c dist/r3c-linux-x64
          elif [ "$RUNNER_OS" == "macOS" ]; then
            cp build/r3c dist/r3c-macos-x64
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/

  publish:
    name: Publish Release + Package Update
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release Notes
        id: notes
        run: |
          echo "### R3C $(date)" > release_notes.txt
          git log -1 --pretty=format:"%h - %s (%an)" >> release_notes.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.txt
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ---------------------------
      # 🍺 Homebrew Formula Update
      # ---------------------------
      - name: Update Homebrew formula
        if: success()
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          mkdir -p Formula
          cat > Formula/r3c.rb <<EOF
          class R3c < Formula
            desc "Rust→NASM Transpiler + Bootstrap Compiler"
            homepage "https://github.com/0200134/r3c"
            url "https://github.com/0200134/r3c/releases/download/${VERSION}/r3c-macos-x64"
            sha256 "$(sha256sum artifacts/r3c-macos-x64 | awk '{print $1}')"
            version "${VERSION}"
            def install
              bin.install "r3c-macos-x64" => "r3c"
            end
          end
          EOF

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Formula/r3c.rb
          git commit -m "Update Homebrew formula for ${VERSION}" || true
          git push origin main || true

      # ---------------------------
      # 🪟 Scoop Manifest Update
      # ---------------------------
      - name: Update Scoop manifest
        if: success()
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          mkdir -p scoop
          cat > scoop/r3c.json <<EOF
          {
            "version": "${VERSION}",
            "architecture": {
              "64bit": {
                "url": "https://github.com/0200134/r3c/releases/download/${VERSION}/r3c-win64.exe",
                "bin": "r3c-win64.exe"
              }
            },
            "homepage": "https://github.com/0200134/r3c",
            "description": "Rust LTS Transpiler + NASM Bootstrap Compiler"
          }
          EOF
          git add scoop/r3c.json
          git commit -m "Update Scoop manifest ${VERSION}" || true
          git push origin main || true

      # ---------------------------
      # 🐧 Debian Package Build
      # ---------------------------
      - name: Build .deb package
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          mkdir -p deb/DEBIAN
          echo "Package: r3c" > deb/DEBIAN/control
          echo "Version: ${VERSION#v}" >> deb/DEBIAN/control
          echo "Architecture: amd64" >> deb/DEBIAN/control
          echo "Maintainer: 0200134 <actions@github.com>" >> deb/DEBIAN/control
          echo "Description: Rust→NASM Transpiler + LTS Bootstrap Compiler" >> deb/DEBIAN/control
          mkdir -p deb/usr/local/bin
          cp artifacts/r3c-linux-x64 deb/usr/local/bin/r3c
          chmod 755 deb/usr/local/bin/r3c
          dpkg-deb --build deb "r3c_${VERSION#v}_amd64.deb"
          mv r3c_*_amd64.deb artifacts/
