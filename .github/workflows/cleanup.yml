name: üßπ Repository Cleanup (Daily + README badge)

on:
  schedule:
    - cron: "0 0 * * *"     # Îß§Ïùº 00:00 UTC (KST 09:00)
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  packages: write
  discussions: read
  issues: read
  pull-requests: read

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üóëÔ∏è Delete older releases and associated tags (Keep 3 Latest)
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 3
          delete_expired_data: 0
          delete_associated_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üßπ Git history garbage collection
        run: |
          git gc --prune=now --aggressive || true
          du -sh .git || true

      - name: üóëÔ∏è Delete old workflow caches (7+ days)
        id: purge_caches
        uses: actions/github-script@v7
        with:
          script: |
            const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
            const res = await github.rest.actions.listCaches({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            let deleted = 0;
            for (const c of res.data.actions_caches || []) {
              const last = new Date(c.last_accessed_at);
              if (last < weekAgo) {
                await github.rest.actions.deleteCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: c.id
                });
                deleted++;
                core.info(`üóëÔ∏è Deleted cache: ${c.key}`);
              }
            }
            core.setOutput('deleted', String(deleted));

      - name: üßæ Delete artifacts older than 7 days
        uses: geekyeggo/delete-artifact@v5
        with:
          age: '7 days'

      - name: üìä Collect cleanup stats
        id: stats
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          REPO_SIZE="$(du -sh .git | awk '{print $1}')"
          RELEASES=$(curl -fsSL -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${REPO}/releases?per_page=100" | jq 'length')
          TS="$(date -u +"%Y-%m-%d %H:%M UTC")"
          echo "REPO_SIZE=${REPO_SIZE}" >> $GITHUB_ENV
          echo "RELEASES=${RELEASES}" >> $GITHUB_ENV
          echo "TS=${TS}" >> $GITHUB_ENV
          echo "CACHES_DELETED=${{ steps.purge_caches.outputs.deleted }}" >> $GITHUB_ENV

      - name: üè∑Ô∏è Update README badge
        run: |
          BADGE_LINE="üßπ Auto Cleanup: **Repo** ${REPO} | **.git** ${REPO_SIZE} | **Releases** ${RELEASES} | **Caches purged** ${CACHES_DELETED} | **Last** ${TS}"
          START="<!--AUTO_CLEANUP_BADGE_START-->"
          END="<!--AUTO_CLEANUP_BADGE_END-->"
          if ! grep -q "$START" README.md 2>/dev/null; then
            {
              echo ""
              echo "$START"
              echo "$BADGE_LINE"
              echo "$END"
            } >> README.md
          else
            awk -v start="$START" -v end="$END" -v line="$BADGE_LINE" '
              BEGIN{inblk=0}
              {
                if ($0 ~ start) {print; print line; inblk=1; next}
                if ($0 ~ end) {print; inblk=0; next}
                if (inblk==0) print
              }' README.md > README.md.tmp && mv README.md.tmp README.md
          fi

      - name: üíæ Commit README if changed
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: actions@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: actions@users.noreply.github.com
        run: |
          if ! git diff --quiet -- README.md; then
            git add README.md
            git commit -m "chore: update cleanup badge (daily) [skip ci]"
            git push
          else
            echo "No README changes to commit."
          fi

      - name: ‚úÖ Done
        run: echo "Daily cleanup complete ‚úÖ"
