# =========================================================
# 🔁 .github/workflows/self-fix.yml (v3.5.1)
# R3C Self-Healing Automation — Cross-Platform Full Stable Edition
# =========================================================

name: "🔁 R3C Self-Fix Automation (v3.5.1)"

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

permissions:
  contents: write
  issues: write

defaults:
  run:
    working-directory: ${{ github.workspace }}

jobs:
  self-fix:
    name: Self-Fix on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: ⚙️ Configure project
        shell: bash
        run: |
          echo "🧹 Cleaning build directory..."
          rm -rf build
          echo "🛠️ Running CMake configure..."
          export CMAKE_POLICY_VERSION_MINIMUM=3.5
          cmake -B build -S $GITHUB_WORKSPACE | tee build_log.txt

      - name: 🧩 Build project
        id: build
        shell: bash
        continue-on-error: true
        run: |
          echo "🔨 Building..."
          export CMAKE_POLICY_VERSION_MINIMUM=3.5
          cmake --build build --config Release -j4 | tee -a build_log.txt

      - name: 🧠 Auto-fix missing headers or stubs
        if: ${{ steps.build.outcome == 'failure' }}
        shell: pwsh
        run: |
          Write-Host "⚠️ Build failed — applying stub fix and cmake patch..."
          New-Item -ItemType Directory -Force -Path "include/nlohmann" | Out-Null
          New-Item -ItemType Directory -Force -Path "src" | Out-Null
          if (Test-Path "build/_deps/nlohmann_json-src/CMakeLists.txt") {
            (Get-Content "build/_deps/nlohmann_json-src/CMakeLists.txt") -replace 'cmake_minimum_required\(VERSION [0-9.]+\)', 'cmake_minimum_required(VERSION 3.5)' | Set-Content "build/_deps/nlohmann_json-src/CMakeLists.txt"
            Write-Host "✅ Patched nlohmann_json CMakeLists.txt to version 3.5"
          }
          Set-Content -Path "include/nlohmann/json.hpp" -Value "// 🩹 Auto-generated stub for missing json.hpp"
          Set-Content -Path "src/r3c_stub.cpp" -Value "// 🩹 Auto-generated stub for r3c_stub.cpp"
          Write-Host "✅ Stubs regenerated."
          Add-Content -Path "build_log.txt" -Value "🧠 Self-fix: stub + cmake patch applied"

      - name: 🔁 Rebuild after fix
        if: ${{ steps.build.outcome == 'failure' }}
        shell: bash
        run: |
          echo "🔄 Rebuilding after self-fix..." | tee -a build_log.txt
          export CMAKE_POLICY_VERSION_MINIMUM=3.5
          cmake -B build -S $GITHUB_WORKSPACE | tee -a build_log.txt
          cmake --build build --config Release -j4 | tee -a build_log.txt || echo "⚠️ Build still failing." | tee -a build_log.txt

      - name: 📤 Commit & Push auto-fix
        if: ${{ steps.build.outcome == 'failure' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git config user.name "r3c-bot"
          git config user.email "r3c-bot@users.noreply.github.com"
          git add include/nlohmann/json.hpp src/r3c_stub.cpp build/_deps/nlohmann_json-src/CMakeLists.txt || true
          git commit -m "🩹 self-fix: cmake policy + stub regeneration (v3.5.1)" || true
          git push origin HEAD:${{ github.ref }} --no-tags || echo "⚠️ Push skipped (no permission or tag conflict)."

      - name: 🪄 Create issue from build log
        if: ${{ steps.build.outcome == 'failure' }}
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "❌ Build failed on ${{ runner.os }} — Auto-Fix Attempted"
          content-filepath: build_log.txt
          labels: |
            auto-fix
            ci-failure

      - name: 🧾 Self-Fix Summary
        shell: bash
        run: |
          echo "=====================================================" >> build_log.txt
          echo "R3C Self-Fix Summary (v3.5.1)" >> build_log.txt
          echo "=====================================================" >> build_log.txt
          if [ '${{ steps.build.outcome }}' = 'failure' ]; then
            echo "🧩 Self-fix applied (stub + cmake + mkdir patched)." >> build_log.txt
          else
            echo "✅ Build succeeded — no fix needed." >> build_log.txt
          fi
          cat build_log.txt
