name: 🚀 Auto Semantic Release (Smart Version + Changelog + Artifact)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup build environment
        run: sudo apt-get update && sudo apt-get install -y cmake g++ nasm zip jq

      - name: 🧱 Build R3C binary
        run: |
          cmake -B build -S .
          cmake --build build --parallel 4
          mkdir -p dist
          cp build/r3c dist/ || true
          zip -r dist/r3c_build.zip dist/*

      - name: 🧮 Determine next semantic version
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Last tag: $LAST_TAG"

          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"%s")
          MAJOR=$(echo ${LAST_TAG#v} | cut -d. -f1)
          MINOR=$(echo ${LAST_TAG#v} | cut -d. -f2)
          PATCH=$(echo ${LAST_TAG#v} | cut -d. -f3)

          BUMP="patch"
          echo "$COMMITS" | grep -qiE "^breaking|!" && BUMP="major"
          echo "$COMMITS" | grep -qiE "^feat:" && [ "$BUMP" != "major" ] && BUMP="minor"

          if [ "$BUMP" = "major" ]; then
            MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0
          elif [ "$BUMP" = "minor" ]; then
            MINOR=$((MINOR+1)); PATCH=0
          else
            PATCH=$((PATCH+1))
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "📦 Bump type: $BUMP → $NEW_TAG"

      - name: 🧾 Generate changelog
        run: |
          echo "## $NEW_TAG ($(date +'%Y-%m-%d'))" > changelog.txt
          git log -10 --pretty=format:"- %s (%h)" >> changelog.txt
          echo -e "\n" >> changelog.txt
          cat changelog.txt
          cat changelog.txt >> CHANGELOG.md

      - name: 💾 Commit changelog
        run: |
          git config user.name "r3c-bot"
          git config user.email "bot@r3c.local"
          git add CHANGELOG.md
          git commit -m "🧾 update changelog for $NEW_TAG" || echo "No changes"
          git push

      - name: 🏷️ Create new tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: 🚀 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.NEW_TAG }}
          name: "R3C ${NEW_TAG}"
          body_path: changelog.txt
          files: |
            dist/r3c_build.zip
