name: R3C Cross-Platform Build & Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install -y cmake nasm g++
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install cmake nasm
          else
            choco install cmake nasm -y
          fi

      - name: Configure CMake
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            cmake -B build -S . -A x64 -DCMAKE_BUILD_TYPE=Release
          else
            cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          fi

      - name: Build Project
        run: |
          cmake --build build --config Release --parallel 4

      - name: Run Binary (Smoke Test)
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build/Release/r3c.exe --version || true
          else
            ./build/r3c --version || true
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            build/r3c
            build/Release/r3c.exe
          if-no-files-found: ignore

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "R3C Build $(date +'%Y-%m-%d')"
          tag_name: "build-$(date +'%Y%m%d%H%M%S')"
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
