name: 🔖 Auto Stable Tag & Release (Full Assets)

on:
  workflow_run:
    workflows: ["🧩 R3C Cross-Platform Build (stable)"]
    types: [completed]

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      REPO: r3c-foundation/r3c
      BOT_NAME: r3c-bot
      BOT_EMAIL: r3c-bot@users.noreply.github.com

    steps:
      # ✅ 1. PAT으로 전체 리포 가져오기
      - name: 🧰 Checkout with PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      # ✅ 2. 최근 빌드 아티팩트 다운로드
      - name: 📦 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      # ✅ 3. Git 설정 및 태그 생성
      - name: ⚙️ Configure Git and Create Tag
        run: |
          git config --global user.name "${BOT_NAME}"
          git config --global user.email "${BOT_EMAIL}"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ env.REPO }}.git
          TS=$(date -u +'%Y%m%d-%H%M%S')
          TAG="auto-stable-${TS}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "✅ Creating tag ${TAG}"
          git tag "${TAG}"
          git push origin "${TAG}"

      # ✅ 4. 릴리스 생성 + 아티팩트 업로드
      - name: 🚀 Create GitHub Release with Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ env.TAG }}
          name: "R3C Stable — ${{ env.TAG }}"
          body: |
            🧩 **R3C Immutable Stable Release**
            - Tag: `${{ env.TAG }}`
            - Built automatically from cross-platform pipeline.
            - Includes Linux/macOS/Windows binaries.
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
            artifacts/**/*.exe
            artifacts/**/*.bin
