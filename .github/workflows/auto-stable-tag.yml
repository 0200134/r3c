name: 🔖 Auto Stable Tag & Release (Full Assets + Multi-OS + Changelog)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  release:
    name: 🧱 Cross-Platform Auto Build & Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # ================================================================
      # 🧰 1. Checkout
      # ================================================================
      - name: 🧰 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # ================================================================
      # ⚙️ 2. Configure Git
      # ================================================================
      - name: ⚙️ Setup Git Environment
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # ================================================================
      # 🧩 3-A. Build on Windows (PowerShell)
      # ================================================================
      - name: 🧩 Build on Windows
        if: matrix.os == 'windows-latest'
        run: |
          Write-Host "🏗️ Building on Windows..."
          mkdir build
          cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          Write-Host "✅ Windows build complete."

      # ================================================================
      # 🧩 3-B. Build on macOS/Linux (bash)
      # ================================================================
      - name: 🧩 Build on Unix
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          echo "🏗️ Building on Unix ($RUNNER_OS)..."
          mkdir -p build
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j$(nproc)
          echo "✅ Build complete for $RUNNER_OS"

      # ================================================================
      # 📦 4. Package
      # ================================================================
      - name: 📦 Package Build Artifacts
        run: |
          mkdir -p dist/${{ matrix.os }}
          cp -r build/* dist/${{ matrix.os }}/ || true
          echo "✅ Packaged artifacts for ${{ matrix.os }}"

      # ================================================================
      # 💾 5. Upload Artifacts
      # ================================================================
      - name: 💾 Upload OS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/${{ matrix.os }}

  # ====================================================================
  # 🏷️ TAG + RELEASE
  # ====================================================================
  tag_release:
    name: 🚀 Create Tag & Publish Release
    needs: release
    runs-on: ubuntu-latest

    steps:
      # ================================================================
      # 1. Checkout
      # ================================================================
      - name: 🧰 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # ================================================================
      # 2. Download all artifacts
      # ================================================================
      - name: 📦 Download all OS Artifacts
        uses: actions/download-artifact@v4
        with:
          path: merged_artifacts

      # ================================================================
      # 3. Merge + Compress
      # ================================================================
      - name: 🧩 Merge all build artifacts
        run: |
          echo "📦 Merging artifacts..."
          mkdir -p release_assets
          cp -r merged_artifacts/* release_assets/
          tar -czf r3c_full_assets_${{ github.run_id }}.tar.gz release_assets
          echo "✅ Assets ready for release."

      # ================================================================
      # 3.5. ⚙️ Setup Git Identity (fix for Committer unknown)
      # ================================================================
      - name: ⚙️ Setup Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # ================================================================
      # 4. Auto Tag
      # ================================================================
      - name: 🏷️ Create Auto Stable Tag
        id: tag
        run: |
          VERSION="v$(date +'%y.%m.%d-%H%M')-stable"
          git tag -a "$VERSION" -m "Auto Stable Release ($VERSION)"
          git push origin "$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # ================================================================
      # 5. Generate Auto Changelog (safe delimiter)
      # ================================================================
      - name: 🧾 Generate Changelog
        id: changelog
        run: |
          echo "🧾 Generating changelog..."
          git log -10 --pretty=format:"- %s (%h)" > CHANGELOG.md
          echo "✅ Changelog created."

          {
            echo 'log<<CHANGELOG'
            cat CHANGELOG.md
            echo 'CHANGELOG'
          } >> "$GITHUB_OUTPUT"

      # ================================================================
      # 6. Publish Release
      # ================================================================
      - name: 🚀 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          name: 🔖 Auto Stable Release — ${{ steps.tag.outputs.version }}
          body: |
            🔄 **Automated Cross-Platform Stable Release**
            - Repository: ${{ github.repository }}
            - Commit: ${{ github.sha }}
            - Generated on: ${{ github.run_id }}
            - Platforms: Linux, macOS, Windows
            - Recent Commits:
            ${{ steps.changelog.outputs.log }}
          files: |
            r3c_full_assets_${{ github.run_id }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ================================================================
      # 7. Summary
      # ================================================================
      - name: ✅ Print Summary
        run: |
          echo "🎉 Multi-OS Auto Stable Release Complete!"
          echo "📦 Tag: ${{ steps.tag.outputs.version }}"
