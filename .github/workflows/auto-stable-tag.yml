name: 🔖 Auto Stable Multi-OS Release + SHA256 + PGP Sign (Self-Alive Ecosystem)

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 0 1 1 *"
    - cron: "0 3 * * 0"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    name: 🧱 Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 🧰 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: ⚙️ Setup Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🧩 Build
        run: |
          echo "🏗️ Building on $RUNNER_OS..."
          mkdir build
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j$(nproc 2>/dev/null || echo 4)
          echo "✅ Build complete on $RUNNER_OS"

      - name: 📦 Package
        run: |
          mkdir -p dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell Compress-Archive -Path build/* -DestinationPath dist/r3c-windows.zip
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            tar -czf dist/r3c-macos.tar.gz build
          else
            tar -czf dist/r3c-linux.tar.gz build
          fi

      - name: 💾 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/*

  release:
    name: 🚀 Multi-OS Release + Sign
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🧰 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: ⚙️ Setup Git Identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 📦 Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: merged_artifacts

      - name: 🧾 Generate Changelog
        id: changelog
        run: |
          echo "🧾 Generating changelog..."
          git log -10 --pretty=format:"- %s (%h)" > CHANGELOG.md
          echo "✅ Changelog created."
          {
            echo "log<<__CHANGELOG__"
            cat CHANGELOG.md
            echo "__CHANGELOG__"
          } >> $GITHUB_OUTPUT

      - name: 🏷️ Create Tag
        id: tag
        run: |
          VERSION="v$(date +'%y.%m.%d-%H%M')-stable"
          git tag -a "$VERSION" -m "Auto Stable Release ($VERSION)"
          git push origin "$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # ================================================================
      # 🔐 Generate SHA256 + PGP Sign
      # ================================================================
      - name: 🔐 Generate SHA256 and PGP signatures
        id: sign
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "🔍 Calculating SHA256 checksums..."
          cd merged_artifacts
          find . -type f \( -name "*.zip" -o -name "*.tar.gz" \) -exec sha256sum {} \; > SHA256SUMS.txt
          echo "✅ Checksums generated."

          echo "🔑 Importing GPG key..."
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "🔏 Signing checksum file..."
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --armor --detach-sign -o SHA256SUMS.txt.asc SHA256SUMS.txt
          echo "✅ PGP signature created (SHA256SUMS.txt.asc)"

          echo "checksums<<__HASH__" >> $GITHUB_OUTPUT
          cat SHA256SUMS.txt >> $GITHUB_OUTPUT
          echo "__HASH__" >> $GITHUB_OUTPUT
          cd ..

      - name: 🚀 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          name: 🔖 Auto Stable Multi-OS Release — ${{ steps.tag.outputs.version }}
          body: |
            🔄 **Cross-Platform Stable Release**
            - Repository: ${{ github.repository }}
            - Commit: ${{ github.sha }}
            - Generated on: ${{ github.run_id }}
            - Platforms: Linux, macOS, Windows
            - Checksums:
            ```
            ${{ steps.sign.outputs.checksums }}
            ```
            - Signature: `SHA256SUMS.txt.asc`  
            - Recent Commits:
            ${{ steps.changelog.outputs.log }}
          files: |
            merged_artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🪄 Update README
        run: |
          python scripts/update_banner.py
          echo "\n\n### 🔐 Latest SHA256 Checksums\n\`\`\`\n$(cat merged_artifacts/SHA256SUMS.txt)\n\`\`\`\n\n✅ **Signed file:** \`SHA256SUMS.txt.asc\` (verify with \`gpg --verify\`)" >> README.md
          git add README.md traffic_graph.png || true
          git commit -m "📈 Auto-update README (banner + signed SHA256)" || echo "No changes"
          git push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Summary
        run: |
          echo "🎉 Multi-Platform Release + SHA256 + PGP Sign Complete!"
          echo "📦 Tag: ${{ steps.tag.outputs.version }}"
          echo "🔐 SHA + PGP signature generated and uploaded."
