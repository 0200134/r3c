name: R3C Autonomous Build Line

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "0 */12 * * *"   # 12시간마다 자동 빌드
  workflow_dispatch:

jobs:
  auto-build:
    name: Self-Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare JSON dependency
        run: |
          mkdir -p include/nlohmann
          curl -fsSL https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp \
            -o include/nlohmann/json.hpp

      - name: Setup tools
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y cmake nasm
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install cmake nasm || true
          elif [ "$RUNNER_OS" = "Windows" ]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
            choco install nasm -y
          fi

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_CXX_FLAGS="-Iinclude"

      # ✅ 자동 재시도 빌드
      - name: Build Project with Auto Retry
        id: buildstep
        shell: bash
        run: |
          echo "⚙️ Building on $RUNNER_OS..."
          attempt=1
          while [ $attempt -le 3 ]; do
            echo "🔁 Attempt $attempt..."
            if cmake --build build --config Release -- -j4 > build_log.txt 2>&1; then
              echo "✅ Build succeeded on attempt $attempt"
              echo "success=true" >> $GITHUB_OUTPUT
              break
            else
              echo "⚠️ Build failed on attempt $attempt"
              if [ $attempt -eq 3 ]; then
                echo "❌ All attempts failed"
                echo "success=false" >> $GITHUB_OUTPUT
                break
              fi
            fi
            ((attempt++))
          done

      # 📦 빌드 성공 시 자동 릴리스
      - name: Auto Release
        if: steps.buildstep.outputs.success == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "auto-${{ github.run_number }}"
          name: "R3C AutoBuild #${{ github.run_number }}"
          body: |
            ✅ **R3C automatic build success**
            OS: ${{ matrix.os }}
            Triggered: ${{ github.event_name }}
            Build number: #${{ github.run_number }}
            Timestamp: $(date)
          files: build/bin/r3c*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🪶 빌드 실패 시 자동 이슈 생성
      - name: Auto Report Issue
        if: steps.buildstep.outputs.success != 'true'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "❌ AutoBuild failed on ${{ matrix.os }}"
          content-filepath: build_log.txt
          labels: |
            autobuild
            ci
            failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🧾 빌드 히스토리 기록
      - name: Append to Build History
        run: |
          mkdir -p logs
          DATE=$(date '+%Y-%m-%d %H:%M:%S')
          STATUS=${{ steps.buildstep.outputs.success }}
          echo "- ${DATE} | OS: ${{ matrix.os }} | Status: ${STATUS} | Run: #${{ github.run_number }}" >> logs/R3C_Build_History.md
          git config --global user.email "r3c-bot@users.noreply.github.com"
          git config --global user.name "r3c-bot"
          git add logs/R3C_Build_History.md
          git commit -m "update: autobuild log #${{ github.run_number }}" || echo "no changes"
          git push
