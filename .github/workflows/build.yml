name: üîñ R3C Autonomous Stable Release v9.1 (Pure GCC + 3OS + Funding + Integrity)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 3 * * *"   # Îß§Ïùº UTC 03Ïãú (ÌïúÍµ≠ÏãúÍ∞Ñ Ï†ïÏò§)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build:
    name: üß± Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      BUILD_TYPE: Release
      TAG: v${{ github.run_number }}-${{ matrix.os }}-gcc-stable-v9.1

    steps:
      - name: üß≠ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----------------------------------------
      # üß© Install GCC Toolchains per OS
      # ----------------------------------------
      - name: üß© Install GCC (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential gcc g++
          gcc --version

      - name: üß© Install GCC (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gcc
          export CC=$(brew --prefix)/bin/gcc-13
          export CXX=$(brew --prefix)/bin/g++-13
          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
          $CXX --version

      - name: üß© Install MinGW (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install mingw -y
          echo "‚úÖ Installed MinGW GCC:"
          where gcc

      # ----------------------------------------
      # üß± Build
      # ----------------------------------------
      - name: üèóÔ∏è Configure & Build
        shell: bash
        run: |
          set -e
          mkdir -p build
          echo "üèóÔ∏è Building with Pure GCC on ${{ matrix.os }}..."
          cmake -B build -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          cmake --build build --config ${BUILD_TYPE} -- -j$(nproc || sysctl -n hw.ncpu || echo 4)
          echo "‚úÖ Build complete:"
          ls -lah build

      # ----------------------------------------
      # üîé Smoke Test
      # ----------------------------------------
      - name: üîé Smoke Test
        shell: bash
        run: |
          exe=$(find build -type f \( -name "r3c_cli" -o -name "r3c_cli.exe" \) | head -n1 || true)
          if [ -n "$exe" ]; then
            echo "‚úÖ Found binary: $exe"
            "$exe" --help || echo "‚ö†Ô∏è CLI test skipped."
          else
            echo "‚ö†Ô∏è No executable found."
          fi

      # ----------------------------------------
      # üì¶ Package & Hash
      # ----------------------------------------
      - name: üì¶ Archive + SHA256
        shell: bash
        run: |
          mkdir -p dist
          tar -czf dist/r3c-${{ matrix.os }}.tar.gz -C build .
          sha256sum dist/r3c-${{ matrix.os }}.tar.gz > dist/SHA256SUMS-${{ matrix.os }}.txt
          cat dist/SHA256SUMS-${{ matrix.os }}.txt

      - name: üíæ Upload
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/

  release:
    name: üìä Combine + Funding Report + Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: üß≠ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üì• Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: üßÆ Combine Hashes
        run: |
          find release_dist -type f -name "SHA256SUMS-*.txt" -exec cat {} + > release_dist/SHA256SUMS.txt
          cat release_dist/SHA256SUMS.txt

      - name: üì¶ Create 3OS Zip
        run: |
          cd release_dist
          zip -r "r3c-${{ github.run_number }}-3os-gcc.zip" .

      - name: ü™∂ Tag Release
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        run: |
          TAG="v$(date -u +'%y.%m.%d-%H%M')-gcc-final-v9.1"
          echo "TAG=$TAG" >> $GITHUB_ENV
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git tag -a "$TAG" -m "Pure GCC 3OS Stable Release v9.1"
          git push origin "$TAG"

      # ----------------------------------------
      # üí∞ Funding & Metrics Integration
      # ----------------------------------------
      - name: üìä Fetch OpenCollective Data
        run: |
          curl -fsSL -H 'Accept: application/json' https://opencollective.com/r3c-foundation.json -o funding.json || echo '{"balance":0,"backersCount":0}' > funding.json
          total=$(jq -r '(.balance // .collective.stats.balance // .stats.balance // 0)/100' funding.json)
          backers=$(jq -r '(.backersCount // .collective.stats.backersCount // .stats.backersCount // 0)' funding.json)
          [[ "$total" =~ ^[0-9]+(\.[0-9]+)?$ ]] || total=0
          [[ "$backers" =~ ^[0-9]+$ ]] || backers=0
          echo "total=$total" >> $GITHUB_ENV
          echo "backers=$backers" >> $GITHUB_ENV

      - name: üßæ Update README Funding Section
        run: |
          echo "üìÑ Updating README.md..."
          awk '/<!-- FUNDING-SECTION-START -->/{flag=1;print;print "";print "### ‚ù§Ô∏è Support R3C Ecosystem";print "";next}/<!-- FUNDING-SECTION-END -->/{flag=0;print "";print "Latest Release: **'${TAG}'**";print 'Total Funding: **$'${total}' USD**';print 'Active Supporters: **'${backers}'**';print '';print "[![OpenCollective](https://img.shields.io/badge/OpenCollective-r3c--foundation-2ea44f?logo=opencollective)](https://opencollective.com/r3c-foundation)";print "[![GitHub Sponsors](https://img.shields.io/badge/Sponsor-via%20GitHub-orange?logo=github)](https://github.com/sponsors/r3c-foundation)";print "";flag=0}flag==0' README.md > tmp && mv tmp README.md
          git add README.md
          git commit -m "üßæ Auto-update README (v9.1 funding)"
          git push

      # ----------------------------------------
      # üß± Publish Release
      # ----------------------------------------
      - name: üß± Publish Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        with:
          tag_name: ${{ env.TAG }}
          name: "R3C ${{ env.TAG }} (Pure GCC + 3OS + Funding)"
          body: |
            ### R3C v9.1 (Pure GCC + 3OS + Funding + Integrity)
            ‚úÖ Verified Pure GCC Build  
            üß± Platforms: Linux / macOS (brew-gcc) / Windows-MinGW  
            üì¶ SHA256SUMS:
            ```
            $(cat release_dist/SHA256SUMS.txt)
            ```
            ‚ù§Ô∏è Funding: ${{ env.total }} USD from ${{ env.backers }} backers  
            _Generated on $(date -u)_  
          files: |
            release_dist/**/r3c-*.tar.gz
            release_dist/r3c-*-3os-gcc.zip
            release_dist/SHA256SUMS.txt

      - name: ‚úÖ Done
        run: echo "R3C v9.1 Pure GCC Stable Release complete ‚úÖ"
