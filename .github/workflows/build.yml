name: 🔖 R3C Autonomous Stable Release v7.1 (3OS + AutoEXE + Funding + Integrity)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build-and-release:
    name: "3OS Build"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      TAG: v${{ github.run_number }}-${{ matrix.os }}-stable-final-v7.1

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧱 Build R3C
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p build
          echo "⚙️ Building on ${{ matrix.os }}..."
          if [ -f CMakeLists.txt ]; then
            cmake -B build -DCMAKE_BUILD_TYPE=Release
            # ✅ 명시적 타깃 지정 (Windows .exe 포함)
            cmake --build build --config Release --target r3c_cli
            if [ -d build/Release ]; then
              cp -f build/Release/r3c_cli.exe build/ 2>/dev/null || true
            fi
          elif [ -f Cargo.toml ]; then
            cargo build --release
            cp -f target/release/r3c* build/ || true
          else
            echo "❌ No valid build system found."
            exit 1
          fi
          ls -lah build

      - name: 🔎 Smoke Test
        shell: bash
        run: |
          echo "⚙️ Smoke test running..."
          exe=$(find build -type f \( -name "r3c_cli" -o -name "r3c_cli.exe" \) | head -n1 || true)
          if [ -n "$exe" ]; then
            echo "✅ Found binary: $exe"
            "$exe" --version || echo "⚠️ CLI test skipped."
          else
            echo "⚠️ r3c_cli not found in build directory."
          fi

      - name: 📦 Package & Hash
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          ARCHIVE="r3c-${{ matrix.os }}.tar.gz"
          tar -czf "dist/$ARCHIVE" -C build .
          python3 - << 'PY'
import hashlib, os
p = "dist/" + os.environ.get("ARCHIVE","archive.tar.gz")
h = hashlib.sha256()
with open(p,"rb") as f:
    for b in iter(lambda:f.read(1024*1024), b""):
        h.update(b)
open(f"dist/SHA256SUMS-${{ matrix.os }}.txt","w").write(f"{h.hexdigest()}  {os.path.basename(p)}\n")
print("✅ SHA256:", h.hexdigest())
PY

      - name: 💾 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/
          if-no-files-found: error
          retention-days: 7

  release-and-report:
    name: "📊 Release + Funding Report"
    runs-on: ubuntu-latest
    needs: build-and-release

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: 🧮 Combine hashes
        run: |
          set -euo pipefail
          find release_dist -type f -name "SHA256SUMS-*.txt" -exec cat {} + > release_dist/SHA256SUMS.txt
          echo "✅ Combined SHA256SUMS:"
          cat release_dist/SHA256SUMS.txt

      - name: 📦 Create unified ZIP (3OS)
        run: |
          cd release_dist
          zip -r "r3c-${{ github.run_number }}-3os.zip" . || true

      - name: 🪶 Generate tag
        id: tag
        run: |
          TAG="v$(date -u +'%y.%m.%d-%H%M')-stable-final-v7.1"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: 💾 Configure remote
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.WORKFLOW_PAT }}@github.com/${{ github.repository }}.git

      - name: 🪶 Push tag
        run: |
          git tag -a "${TAG}" -m "Stable Final v7.1 (3OS + AutoEXE + Integrity)"
          git push origin "${TAG}"

      - name: 🧾 Create release notes
        run: |
          {
            echo "### R3C v7.1 Autonomous Stable Release"
            echo ""
            echo "✅ 3OS Verified Build (Windows .exe included)"
            echo "📦 SHA256 checksums:"
            cat release_dist/SHA256SUMS.txt
            echo ""
            echo "_Generated on $(date -u)_"
          } > release_dist/RELEASE_NOTE.txt

      - name: 🧱 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        with:
          tag_name: ${{ env.TAG }}
          name: "R3C ${{ env.TAG }} (3OS + AutoEXE + Funding)"
          body_path: release_dist/RELEASE_NOTE.txt
          files: |
            release_dist/**/r3c-*.tar.gz
            release_dist/r3c-*-3os.zip
            release_dist/SHA256SUMS.txt

      - name: 📊 Fetch OpenCollective Data
        run: |
          echo "📡 Fetching OpenCollective..."
          curl -fsSL -H 'Accept: application/json' https://opencollective.com/r3c-foundation.json -o funding.json || echo '{"balance":0,"backersCount":0}' > funding.json
          total=$(jq -r '(.balance // .collective.stats.balance // .stats.balance // 0)/100' funding.json)
          backers=$(jq -r '(.backersCount // .collective.stats.backersCount // .stats.backersCount // 0)' funding.json)
          [[ "$total" =~ ^[0-9]+(\.[0-9]+)?$ ]] || total=0
          [[ "$backers" =~ ^[0-9]+$ ]] || backers=0
          echo "total=$total" >> $GITHUB_ENV
          echo "backers=$backers" >> $GITHUB_ENV

      - name: 🧾 Update README funding section
        run: |
          echo "📄 Updating README.md..."
          awk '/<!-- FUNDING-SECTION-START -->/{flag=1;print;print "";print "### ❤️ Support R3C Ecosystem";print "";next}/<!-- FUNDING-SECTION-END -->/{flag=0;print "";print "Latest Release: **'${TAG}'**";print 'Total Funding: **$'${total}' USD**';print 'Active Supporters: **'${backers}'**';print '';print "[![OpenCollective](https://img.shields.io/badge/OpenCollective-r3c--foundation-2ea44f?logo=opencollective)](https://opencollective.com/r3c-foundation)";print "[![GitHub Sponsors](https://img.shields.io/badge/Sponsor-via%20GitHub-orange?logo=github)](https://github.com/sponsors/r3c-foundation)";print "";flag=0}flag==0' README.md > tmp && mv tmp README.md
          git add README.md
          git commit -m "🧾 Auto-update README (v7.1 funding)"
          git push

      - name: ✅ Done
        run: echo "R3C v7.1 complete ✅"
