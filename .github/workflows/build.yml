name: 🧩 R3C Cross-Platform Auto Build & Release (v6.6 LTS)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: 🧱 Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 🧰 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.28.3"

      # ============================================
      # 🪟 Windows (PowerShell)
      # ============================================
      - name: 🪟 Configure (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          echo "🪟 Configuring for Windows..."
          cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: 🪟 Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          echo "🪟 Building..."
          cmake --build build --config Release --target r3c_cli

      - name: 🪟 Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          echo "🪟 Packaging..."
          mkdir dist
          Copy-Item "build/Release/r3c_cli.exe" -Destination "dist/"
          Compress-Archive -Path "dist/*" -DestinationPath "r3c-windows-latest.zip"

      # ============================================
      # 🐧 macOS / Linux (Bash)
      # ============================================
      - name: 🧩 Configure (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          echo "⚙️ Configuring for $RUNNER_OS..."
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: 🔨 Build (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          echo "🔨 Building for $RUNNER_OS..."
          cmake --build build --target r3c_cli -j$(nproc || sysctl -n hw.ncpu)

      - name: 📦 Package (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          echo "📦 Packaging..."
          mkdir -p dist
          cp build/r3c_cli dist/
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            zip -r r3c-macos-latest.zip dist
          else
            zip -r r3c-linux-latest.zip dist
          fi

      # ============================================
      # 🚀 Upload artifacts
      # ============================================
      - name: 🚀 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            r3c-*-latest.zip

  # ============================================
  # 🧾 Auto Release
  # ============================================
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Download All Builds
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: auto-stable-${{ github.run_id }}
          name: R3C Stable Auto Release (${{ github.run_id }})
          files: |
            artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
