name: R3C Cross-Platform Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean previous build cache
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then rmdir /S /Q build 2>nul || exit 0; fi
          if [ "$RUNNER_OS" == "Linux" ]; then rm -rf build || true; fi
          if [ "$RUNNER_OS" == "macOS" ]; then rm -rf build || true; fi

      - name: Setup NASM
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then choco install nasm -y; fi
          if [ "$RUNNER_OS" == "Linux" ]; then sudo apt-get update && sudo apt-get install -y nasm; fi
          if [ "$RUNNER_OS" == "macOS" ]; then brew install nasm; fi

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Configure build
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build --config Release -- -j4

      - name: Run test (if available)
        continue-on-error: true
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then ./build/Release/r3c.exe --test || exit 0; fi
          if [ "$RUNNER_OS" == "Linux" ]; then ./build/r3c --test || exit 0; fi
          if [ "$RUNNER_OS" == "macOS" ]; then ./build/r3c --test || exit 0; fi

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            build/r3c*
            build/Release/r3c.exe
