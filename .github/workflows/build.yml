name: 🔖 R3C Pure GCC Multi-OS Build (No LLVM / No MSVC)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pure-gcc-build
  cancel-in-progress: false

jobs:
  build:
    name: "🧱 Build on ${{ matrix.os }} (Pure GCC)"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: 🧭 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ============================================================
      # 🧩 Install GCC for each platform
      # ============================================================
      - name: 🧱 Install GCC (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential gcc g++

      - name: 🧱 Install GCC (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gcc
          GCC_PREFIX=$(brew --prefix gcc)
          echo "✅ GCC installed under: $GCC_PREFIX"
          echo "${GCC_PREFIX}/bin" >> $GITHUB_PATH

          # gcc 바이너리 실제 이름 자동 감지 (gcc-14, gcc-13 등)
          GCC_BIN=$(ls ${GCC_PREFIX}/bin | grep -E '^gcc-[0-9]+$' | sort -V | tail -n1)
          GPP_BIN=$(ls ${GCC_PREFIX}/bin | grep -E '^g\+\+-[0-9]+$' | sort -V | tail -n1)

          echo "CC=${GCC_PREFIX}/bin/${GCC_BIN}" >> $GITHUB_ENV
          echo "CXX=${GCC_PREFIX}/bin/${GPP_BIN}" >> $GITHUB_ENV
          echo "GCC_PATH=${GCC_PREFIX}" >> $GITHUB_ENV

          echo "Detected GCC binary: ${GCC_BIN}"
          echo "Detected G++ binary: ${GPP_BIN}"

          which gcc || true
          gcc --version || true

      - name: 🧱 Install GCC (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install mingw --installargs 'ADD_CMAKE_TO_PATH=System' -y
          echo "C:/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin" >> $env:GITHUB_PATH
          echo "CC=gcc" >> $env:GITHUB_ENV
          echo "CXX=g++" >> $env:GITHUB_ENV

      # ============================================================
      # 🏗️ Build with Pure GCC
      # ============================================================
      - name: 🏗️ Build R3C (Pure GCC)
        shell: bash
        run: |
          set -e
          echo "🏗️ Building on $RUNNER_OS..."
          mkdir -p build
          echo "Using CC=$CC"
          echo "Using CXX=$CXX"
          which $CC || true
          $CC --version || true
          cmake -B build -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER="$CC" \
            -DCMAKE_CXX_COMPILER="$CXX" \
            -DCMAKE_VERBOSE_MAKEFILE=ON
          cmake --build build --config Release -v
          ls -lah build

      # ============================================================
      # ✅ Verify Compiler Identity
      # ============================================================
      - name: 🔎 Verify Pure GCC
        shell: bash
        run: |
          COMP_ID=$(cmake -LA -N build | grep CMAKE_CXX_COMPILER_ID | cut -d'=' -f2 | tr -d ' ')
          echo "Detected Compiler: $COMP_ID"
          if [ "$COMP_ID" != "GNU" ]; then
            echo "❌ Non-GCC compiler detected ($COMP_ID)!"
            exit 1
          fi
          echo "✅ Verified: Pure GCC build confirmed."

      # ============================================================
      # 📦 Package Artifacts
      # ============================================================
      - name: 📦 Package Artifacts
        shell: bash
        run: |
          mkdir -p dist
          tar -czf dist/r3c-${{ matrix.os }}-gcc.tar.gz -C build .
          sha256sum dist/r3c-${{ matrix.os }}-gcc.tar.gz > dist/SHA256SUMS.txt
          cat dist/SHA256SUMS.txt

      - name: 💾 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}-gcc
          path: dist/
          if-no-files-found: error
          retention-days: 7

      # ============================================================
      # 🚀 Auto Release (optional)
      # ============================================================
      - name: 🚀 Auto Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/r3c-${{ matrix.os }}-gcc.tar.gz
          tag_name: auto-gcc-${{ github.run_number }}
          name: "🔖 R3C Pure GCC v${{ github.run_number }}"
          body: "Automated Pure GCC build for ${{ matrix.os }}"
