name: ⚙️ R3C Cross-Platform Autonomous Build (v6 Universal Stable)

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    name: 🪟 Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: 🧱 Setup CMake and NASM
        run: |
          choco install cmake -y --no-progress
          choco install nasm -y --no-progress

      - name: ⚙️ Configure (x64 Release)
        shell: bash
        run: |
          mkdir -p include/nlohmann
          echo "// auto-generated json.hpp stub" > include/nlohmann/json.hpp
          cmake -B build -S . -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: 🏗️ Build
        shell: bash
        run: cmake --build build --config Release --parallel 4

      - name: 🧪 Run Tests
        shell: bash
        run: |
          if [ -f "build/r3c_tests.exe" ]; then
            ./build/r3c_tests.exe
          else
            echo "⚠️ No tests found, skipping."
          fi

      - name: 📦 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-windows-binaries
          path: |
            build/**/*.exe
            build/**/*.log
            bin/**/*.exe

  build-linux:
    name: 🐧 Build on Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Install dependencies
        run: sudo apt update && sudo apt install -y build-essential cmake nasm

      - name: 🧩 Configure and Build
        run: |
          mkdir -p include/nlohmann
          echo "// auto-generated json.hpp stub" > include/nlohmann/json.hpp
          cmake -B build -S .
          cmake --build build --config Release --parallel 4

      - name: 📦 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-linux-binaries
          path: build/r3c

  build-macos:
    name: 🍎 Build on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Install tools
        run: brew install cmake nasm

      - name: 🧩 Configure and Build
        shell: bash
        run: |
          mkdir -p include/nlohmann
          echo "// auto-generated json.hpp stub" > include/nlohmann/json.hpp
          cmake -B build -S .
          cmake --build build --config Release --parallel 4

      - name: 📦 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-macos-binaries
          path: build/r3c
