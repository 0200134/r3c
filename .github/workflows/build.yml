name: üîñ R3C 3OS Autonomous Stable Release v5 (PAT + SHA Verified)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"   # Îß§Ïùº 00:00 UTC ÏûêÎèô Ïã§Ìñâ
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build-and-release:
    name: "R3C 3OS Build & Release"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      TAG: v${{ github.run_number }}-${{ matrix.os }}-stable-final-v5

    steps:
      - name: üß≠ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup Git user
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"

      - name: üß± Build R3C (auto-detect)
        shell: bash
        run: |
          echo "üîß Building on ${{ matrix.os }}..."
          mkdir -p build
          if [ -f Cargo.toml ]; then
            cargo build --release
            cp target/release/r3c build/ || cp target/release/r3c.exe build/ || true
          elif [ -f CMakeLists.txt ]; then
            cmake -B build -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
          else
            echo "‚ùå No recognized build system (Cargo.toml or CMakeLists.txt missing)."
            exit 1
          fi
          echo "‚úÖ Build finished successfully."

      - name: üì¶ Package build
        shell: bash
        run: |
          mkdir -p dist
          tar -czf dist/r3c-${{ matrix.os }}.tar.gz -C build .
          cd dist
          sha256sum r3c-${{ matrix.os }}.tar.gz > SHA256SUMS-${{ matrix.os }}.txt
          echo "‚úÖ Packaged artifact and SHA256 hash."

      - name: üíæ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/

  release:
    name: "üîñ Aggregate & Release"
    runs-on: ubuntu-latest
    needs: build-and-release

    steps:
      - name: üì¶ Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: üßÆ Combine SHA256 files
        run: |
          cat release_dist/**/SHA256SUMS-*.txt > release_dist/SHA256SUMS.txt
          echo "‚úÖ Combined SHA256SUMS.txt"

      - name: üîç Verify all artifacts exist
        run: |
          ls -lh release_dist/**/r3c-*.tar.gz || exit 1

      - name: üîç Generate unified release tag
        id: tag
        run: |
          TAG="v$(date +'%y.%m.%d-%H%M')-stable-final-v5"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "ü™∂ Tagging release as $TAG"

      - name: üíæ Configure remote with PAT
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.WORKFLOW_PAT }}@github.com/${{ github.repository }}.git

      - name: ü™∂ Create and push tag using PAT
        run: |
          git tag -a "${TAG}" -m "Stable Final v5 (3OS)"
          git push origin "${TAG}"

      - name: üß± Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        with:
          tag_name: ${{ env.TAG }}
          name: "R3C ${TAG} (3OS Stable Release)"
          body: |
            üß± R3C 3OS Autonomous Stable Release (v5)
            ‚úÖ Verified builds for Ubuntu, macOS, Windows
            üì¶ Auto-packaged and SHA256 verified
            Date: $(date -u)
          files: |
            release_dist/**/r3c-*.tar.gz
            release_dist/SHA256SUMS.txt

      - name: üß© Verify Release Creation
        run: |
          if ! gh release view "${TAG}" >/dev/null 2>&1; then
            echo "‚ùå Release creation failed!"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}

      - name: ‚úÖ Done
        run: echo "3OS Stable Release complete ‚úÖ"
