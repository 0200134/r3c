name: üîñ R3C Autonomous Stable Release v7.7 (3OS + PureGCC + macOS Fix + Funding)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"  # Îß§Ïùº Ïò§Ï†Ñ 9Ïãú (KST)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build-and-release:
    name: "3OS Build (Pure GCC / No LLVM)"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      TAG: v${{ github.run_number }}-${{ matrix.os }}-auto-v7.7

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ==========================================================
      # ü™ü Windows (Pure MinGW)
      # ==========================================================
      - name: üß± Build on Windows (Pure MinGW)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "üèóÔ∏è Building on Windows (Pure MinGW)..."
          choco install mingw -y
          export PATH="/c/ProgramData/chocolatey/bin:/c/tools/mingw64/bin:$PATH"
          which g++
          g++ --version
          unset VSINSTALLDIR VCINSTALLDIR WindowsSdkDir
          cmake -E env CC=gcc CXX=g++ cmake -G "MinGW Makefiles" -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target r3c_cli
          ls -lah build

      # ==========================================================
      # üêß Linux (Native GCC)
      # ==========================================================
      - name: üß± Build on Linux
        if: runner.os == 'Linux'
        run: |
          echo "üèóÔ∏è Building on Linux..."
          gcc --version
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target r3c_cli
          ls -lah build

      # ==========================================================
      # üçé macOS (Homebrew GNU GCC) ‚Äî ‚úÖ AppleClang ÏôÑÏ†Ñ Ï∞®Îã®
      # ==========================================================
      - name: üß± Build on macOS (GNU GCC)
        if: runner.os == 'macOS'
        run: |
          echo "üèóÔ∏è Building on macOS with GNU GCC..."
          brew update
          brew install gcc
          GCC_PATH=$(brew --prefix gcc)
          export CC="${GCC_PATH}/bin/gcc-13"
          export CXX="${GCC_PATH}/bin/g++-13"
          echo "‚úÖ Using compiler: $($CXX --version | head -n1)"
          which $CXX
          # üëá AppleClang Ï∞®Îã® + GCC Í∞ïÏ†ú ÏßÄÏ†ï
          env CC=$CC CXX=$CXX cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX
          cmake --build build --target r3c_cli --config Release
          ls -lah build

      # ==========================================================
      # üß™ Smoke Test
      # ==========================================================
      - name: üîé Smoke Test
        shell: bash
        run: |
          exe=$(find build -type f \( -name "r3c_cli" -o -name "r3c_cli.exe" \) | head -n1 || true)
          if [ -n "$exe" ]; then
            echo "‚úÖ Found executable: $exe"
            "$exe" --help || echo "‚ö†Ô∏è CLI test skipped."
          else
            echo "‚ö†Ô∏è r3c_cli not found!"
          fi

      # ==========================================================
      # üì¶ Package & Hash
      # ==========================================================
      - name: üì¶ Package & Hash
        shell: bash
        run: |
          mkdir -p dist
          ARCHIVE="r3c-${{ matrix.os }}.tar.gz"
          tar -czf "dist/$ARCHIVE" -C build .
          python3 - << 'PY'
import hashlib, os
p = "dist/" + os.environ.get("ARCHIVE","archive.tar.gz")
h = hashlib.sha256()
with open(p,"rb") as f:
    for b in iter(lambda:f.read(1024*1024), b""):
        h.update(b)
open(f"dist/SHA256SUMS-${{ matrix.os }}.txt","w").write(f"{h.hexdigest()}  {os.path.basename(p)}\n")
print("‚úÖ SHA256:", h.hexdigest())
PY

      - name: üíæ Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/
          if-no-files-found: error
          retention-days: 7

  # ==========================================================
  # üìä Release + Funding Integration
  # ==========================================================
  release-and-report:
    name: "üìä Release + Auto Funding Report"
    runs-on: ubuntu-latest
    needs: build-and-release

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4

      - name: üì• Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: üßÆ Combine hashes
        run: |
          find release_dist -type f -name "SHA256SUMS-*.txt" -exec cat {} + > release_dist/SHA256SUMS.txt
          cat release_dist/SHA256SUMS.txt

      - name: ü™∂ Generate tag
        id: tag
        run: |
          TAG="v$(date -u +'%y.%m.%d-%H%M')-auto-v7.7"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: üìä Fetch OpenCollective Funding Data
        run: |
          echo "üì° Fetching OpenCollective data..."
          curl -fsSL -H 'Accept: application/json' https://opencollective.com/r3c-foundation.json -o funding.json || echo '{"balance":0,"backersCount":0}' > funding.json
          total=$(jq -r '(.balance // .collective.stats.balance // .stats.balance // 0)/100' funding.json)
          backers=$(jq -r '(.backersCount // .collective.stats.backersCount // .stats.backersCount // 0)' funding.json)
          [[ "$total" =~ ^[0-9]+(\.[0-9]+)?$ ]] || total=0
          [[ "$backers" =~ ^[0-9]+$ ]] || backers=0
          echo "total=$total" >> $GITHUB_ENV
          echo "backers=$backers" >> $GITHUB_ENV
          echo "‚úÖ Total funding: $${total}, Backers: ${backers}"

      - name: üßæ Create release notes
        run: |
          {
            echo "### R3C v7.7 Autonomous LLVM-Free + Funding Release"
            echo ""
            echo "‚úÖ 3OS Pure GCC (No LLVM / No Clang / No MSVC)"
            echo "üí∞ Total Funding: $${total} USD"
            echo "üë• Active Supporters: ${backers}"
            echo "üïò Daily Auto-Build (09:00 KST)"
            echo ""
            echo "üì¶ SHA256 checksums:"
            cat release_dist/SHA256SUMS.txt
            echo ""
            echo "_Generated on $(date -u)_"
          } > release_dist/RELEASE_NOTE.txt

      - name: üß± Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        with:
          tag_name: ${{ env.TAG }}
          name: "R3C ${{ env.TAG }} (Pure GCC + AutoFunding)"
          body_path: release_dist/RELEASE_NOTE.txt
          files: |
            release_dist/**/r3c-*.tar.gz
            release_dist/SHA256SUMS.txt

      - name: üßæ Auto-update README Funding Section
        run: |
          echo "üìÑ Updating README.md funding block..."
          awk '/<!-- FUNDING-SECTION-START -->/{flag=1;print;print "";print "### ‚ù§Ô∏è Support the R3C Ecosystem";print "";next}/<!-- FUNDING-SECTION-END -->/{flag=0;print "";print "Latest Release: **'${TAG}'**";print 'Total Funding: **$'${total}' USD**';print 'Active Supporters: **'${backers}'**';print '';print '[![OpenCollective](https://img.shields.io/badge/OpenCollective-r3c--foundation-2ea44f?logo=opencollective)](https://opencollective.com/r3c-foundation)';print '[![GitHub Sponsors](https://img.shields.io/badge/Sponsor-via%20GitHub-orange?logo=github)](https://github.com/sponsors/r3c-foundation)';print "";flag=0}flag==0' README.md > tmp && mv tmp README.md
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add README.md
          git commit -m "üßæ Auto-update README funding (v7.7)"
          git push

      - name: ‚úÖ Done
        run: echo "R3C v7.7 GCC + macOS Fix + Funding complete ‚úÖ"
