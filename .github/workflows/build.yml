name: üîñ R3C Autonomous Stable Release v6 (3OS + Funding Report)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"   # Îß§Ïùº 00:00 UTC
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build-and-release:
    name: "3OS Build"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      TAG: v${{ github.run_number }}-${{ matrix.os }}-stable-final-v6

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üß± Build R3C
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p build
          if [ -f Cargo.toml ]; then
            cargo build --release
            cp -f target/release/r3c* build/ || true
          elif [ -f CMakeLists.txt ]; then
            cmake -B build -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
          else
            echo "‚ùå No build system found (Cargo.toml or CMakeLists.txt missing)."
            exit 1
          fi
          ls -lah build || true

      - name: üì¶ Package & Hash (cross-platform via Python)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          ARCHIVE="r3c-${{ matrix.os }}.tar.gz"
          tar -czf "dist/$ARCHIVE" -C build .
          python3 - << 'PY'
import hashlib,sys,os
p = "dist/" + os.environ.get("ARCHIVE","archive.tar.gz")
h = hashlib.sha256()
with open(p,"rb") as f:
    for b in iter(lambda:f.read(1024*1024), b""):
        h.update(b)
print(f"{h.hexdigest()}  {os.path.basename(p)}")
open(f"dist/SHA256SUMS-${{ matrix.os }}.txt","w").write(f"{h.hexdigest()}  {os.path.basename(p)}\n")
PY
          echo "‚úÖ Packaged and hashed."

      - name: üíæ Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/
          if-no-files-found: error
          retention-days: 7

  release-and-report:
    name: "üìä Release + Funding Report"
    runs-on: ubuntu-latest
    needs: build-and-release

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üì• Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: üßÆ Combine hashes (portable)
        shell: bash
        run: |
          set -euo pipefail
          find release_dist -type f -name "SHA256SUMS-*.txt" -exec cat {} + > release_dist/SHA256SUMS.txt
          echo "‚úÖ SHA256SUMS combined:"
          cat release_dist/SHA256SUMS.txt

      - name: üîç Verify artifacts exist
        shell: bash
        run: |
          set -euo pipefail
          find release_dist -type f -name "r3c-*.tar.gz" -ls | wc -l
          find release_dist -type f -name "r3c-*.tar.gz" -ls

      - name: ü™∂ Generate release tag
        id: tag
        shell: bash
        run: |
          set -euo pipefail
          TAG="v$(date -u +'%y.%m.%d-%H%M')-stable-final-v6"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: üíæ Configure remote with PAT
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.WORKFLOW_PAT }}@github.com/${{ github.repository }}.git

      - name: ü™∂ Push tag
        shell: bash
        run: |
          set -euo pipefail
          git tag -a "${TAG}" -m "Stable Final v6 (3OS + Funding)"
          git push origin "${TAG}"

      - name: üß± Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        with:
          tag_name: ${{ env.TAG }}
          name: "R3C ${{ env.TAG }} (3OS + Funding Report)"
          body: |
            üß± **R3C 3OS Autonomous Release (v6)**
            ‚úÖ Verified builds for Ubuntu, macOS, and Windows.
            üìä Includes automatic funding status and SHA256 report.
            Date (UTC): $(date -u)
          files: |
            release_dist/**/r3c-*.tar.gz
            release_dist/SHA256SUMS.txt

      - name: üìä Fetch OpenCollective Funding Data (robust)
        id: funding
        shell: bash
        run: |
          set -euo pipefail
          echo "üì° Fetching OpenCollective funding info..."
          curl -fsSL -H 'Accept: application/json' https://opencollective.com/r3c-foundation.json -o funding.json || echo '{}' > funding.json
          # Ïó¨Îü¨ ÌïÑÎìú Í≤ΩÎ°ú ÏãúÎèÑ (JSON Ïä§ÌÇ§Îßà Î≥ÄÎèô ÎåÄÎπÑ)
          total=$(
            jq -r '
              (.balance // .collective.stats.balance // .stats.balance // 0) / 100
            ' funding.json 2>/dev/null || echo 0
          )
          backers=$(
            jq -r '
              (.backersCount // .collective.stats.backersCount // .stats.backersCount // 0)
            ' funding.json 2>/dev/null || echo 0
          )
          # NaN/ÎπÑÏ†ïÏÉÅ Í∞í Î∞©ÏßÄ
          [[ "$total" =~ ^[0-9]+(\.[0-9]+)?$ ]] || total=0
          [[ "$backers" =~ ^[0-9]+$ ]] || backers=0
          echo "total=$total" >> $GITHUB_ENV
          echo "backers=$backers" >> $GITHUB_ENV
          echo "‚úÖ Funding data: ${total} USD, ${backers} backers"

      - name: üßæ Update README (funding + latest release)
        shell: bash
        run: |
          set -euo pipefail
          echo "üìÑ Updating README with funding info..."
          sed -i '/^### ‚ù§Ô∏è Support R3C Ecosystem/,$d' README.md || true
          {
            echo "### ‚ù§Ô∏è Support R3C Ecosystem"
            echo ""
            echo "Latest Release: **${TAG}**  "
            echo "Total Funding: **$${{ env.total }} USD**  "
            echo "Active Supporters: **${{ env.backers }}**"
            echo ""
            echo "[![OpenCollective](https://img.shields.io/badge/OpenCollective-r3c--foundation-2ea44f?logo=opencollective)](https://opencollective.com/r3c-foundation)"
            echo "[![GitHub Sponsors](https://img.shields.io/badge/Sponsor-via%20GitHub-orange?logo=github)](https://github.com/sponsors/r3c-foundation)"
            echo ""
            echo "_Autonomously updated by GitHub Actions (v6)._"
          } >> README.md
          git add README.md
          git commit -m "üßæ Auto-update README with funding data"
          git push

      - name: ‚úÖ Done
        shell: bash
        run: echo "R3C v6 Autonomous Release + Funding Report complete ‚úÖ"
