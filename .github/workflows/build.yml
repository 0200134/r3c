name: R3C Multi-Platform Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # ü™ü Windows (MinGW)
  build-windows:
    name: ü™ü Build on Windows (MinGW)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: powershell
        run: |
          choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install mingw -y
          choco install nasm -y
          refreshenv
          cmake --version
          g++ --version
          nasm -v

      - name: Clean build folder
        shell: bash
        run: rm -rf build

      - name: Configure (CMake)
        shell: bash
        run: cmake -B build -S . -G "MinGW Makefiles"

      - name: Build
        shell: bash
        run: cmake --build build --config Release

      - name: Test transpiler
        shell: bash
        run: |
          echo "====================================================="
          echo "[r3c] Rust LTS transpiler test (Windows)"
          echo "====================================================="
          ./build/r3c.exe --emit-asm --test || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-windows
          path: build/r3c.exe

  # üêß Linux (GCC)
  build-linux:
    name: üêß Build on Ubuntu (GCC)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake nasm

      - name: Clean build folder
        run: rm -rf build

      - name: Configure (CMake)
        run: cmake -B build -S . -G "Unix Makefiles"

      - name: Build
        run: cmake --build build --config Release

      - name: Test transpiler
        run: |
          echo "====================================================="
          echo "[r3c] Rust LTS transpiler test (Linux)"
          echo "====================================================="
          ./build/r3c --emit-asm --test || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-linux
          path: build/r3c

  # üçé macOS (Clang)
  build-macos:
    name: üçé Build on macOS (Clang)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install cmake nasm

      - name: Verify toolchain
        run: |
          clang++ --version
          cmake --version
          nasm -v

      - name: Clean build folder
        run: rm -rf build

      - name: Configure (CMake)
        run: cmake -B build -S . -G "Unix Makefiles"

      - name: Build
        run: cmake --build build --config Release

      - name: Test transpiler
        run: |
          echo "====================================================="
          echo "[r3c] Rust LTS transpiler test (macOS)"
          echo "====================================================="
          ./build/r3c --emit-asm --test || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: r3c-macos
          path: build/r3c
