name: üîñ R3C v8.0 Pure GCC Autonomous Release (3OS + LTSS + Integrity)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pure-gcc-stable
  cancel-in-progress: false

jobs:
  build:
    name: "Pure GCC 3OS Build"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ======================================================
      # üß± GCC Setup for Each OS
      # ======================================================
      - name: ‚öôÔ∏è Setup Pure GCC Environment
        shell: bash
        run: |
          echo "üîß Setting up GCC on ${{ matrix.os }}..."

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            choco install mingw -y
            export PATH="/c/tools/mingw64/bin:/c/ProgramData/chocolatey/bin:$PATH"
            which gcc || { echo "‚ùå GCC not found!"; exit 1; }
            rm -rf "/c/Program Files/Microsoft Visual Studio" || true
            rm -rf "/c/Program Files (x86)/Microsoft Visual Studio" || true
            echo "‚úÖ MSVC removed. Pure GCC only."

          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install gcc || true
            export CC=gcc-13
            export CXX=g++-13
            echo "‚úÖ Using $(gcc-13 --version | head -n1)"

          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update -y
            sudo apt-get install -y build-essential
            echo "‚úÖ Linux GCC OK"
          fi

      # ======================================================
      # üß© Build
      # ======================================================
      - name: üß± Build R3C
        shell: bash
        run: |
          mkdir -p build
          cmake -E env CC=gcc CXX=g++ cmake -B build -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles"
          cmake --build build --target r3c_cli
          ls -lah build

      # ======================================================
      # üîé Test & Archive
      # ======================================================
      - name: üîé Smoke Test
        shell: bash
        run: |
          echo "‚öôÔ∏è Smoke test..."
          exe=$(find build -type f -name "r3c_cli*" | head -n1)
          if [ -n "$exe" ]; then
            "$exe" --version || echo "‚ö†Ô∏è CLI version check skipped."
          else
            echo "‚ùå r3c_cli not found!"
            exit 1
          fi

      - name: üì¶ Package
        shell: bash
        run: |
          mkdir -p dist
          tar -czf "dist/r3c-${{ matrix.os }}.tar.gz" -C build .
          echo "‚úÖ Packaged build for ${{ matrix.os }}"

      - name: üíæ Upload
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: dist/
          retention-days: 7
