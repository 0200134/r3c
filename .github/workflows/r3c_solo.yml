name: ðŸ§© R3C Solo Autonomous Build (stable)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 21 * * *" # 06:00 KST

jobs:
  solo:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Prepare (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y nasm zip

      - name: Prepare (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: brew install nasm || true

      - name: Prepare (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: choco install nasm zip -y

      - name: Configure (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Configure (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: Build (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: cmake --build build --config Release -j

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: cmake --build build --config Release --target r3c_cli

      - name: Generate demo outputs
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ./build/Release/r3c_cli.exe --outdir build/out
          else
            ./build/r3c_cli --outdir build/out
          fi

      - name: Assemble (Linux only)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          nasm -felf64 build/out/output.asm -o build/out/output.o
          ld -o build/out/r3c_demo build/out/output.o

      - name: Archive artifacts
        shell: bash
        run: |
          mkdir -p dist && cp -r build/out dist/out
          if [[ -f build/out/r3c_demo ]]; then cp build/out/r3c_demo dist/; fi
          tar -czf r3c-solo-${{ matrix.os }}.tar.gz -C dist .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: r3c-solo-${{ matrix.os }}
          path: r3c-solo-${{ matrix.os }}.tar.gz