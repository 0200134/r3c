name: R3C Self-Diagnosis & Status Dashboard

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # ✅ 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # ✅ 2. json.hpp 확보
      - name: Ensure nlohmann/json.hpp exists
        shell: bash
        run: |
          mkdir -p include/nlohmann
          curl -fsSL https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp \
            -o include/nlohmann/json.hpp
          echo "✅ nlohmann/json.hpp ready."

      # ✅ 3. 빌드 툴 설치
      - name: Prepare Build Tools
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y cmake nasm
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install cmake nasm || true
          elif [ "$RUNNER_OS" = "Windows" ]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
            choco install nasm -y
          fi
          echo "✅ Tools ready."

      # ✅ 4. Configure
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_CXX_FLAGS="-Iinclude"

      # ⚙️ 5. Build (에러 무시, 로그 남김)
      - name: Build Project
        id: build_step
        shell: bash
        continue-on-error: true
        run: |
          echo "⚙️ Building on $RUNNER_OS ..."
          set +e
          cmake --build build --config Release -- -j4 > build_log.txt 2>&1
          status=$?
          tail -n 40 build_log.txt
          echo "exit_code=$status" >> $GITHUB_OUTPUT
          exit $status

      # 🚨 6. 실패 보고 + 자동 해결 제안
      - name: Create issue on failure
        if: failure()
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "❌ Build failed on ${{ matrix.os }}"
          content-filepath: build_log.txt
          labels: |
            build
            ci
            auto-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Suggest Fix on Failure
        if: failure()
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🧩 **R3C Auto-Diagnosis Suggestion**
            Build failed on **${{ matrix.os }}**.

            **Detected Problems & Possible Fixes:**
            - `'nlohmann/json.hpp' not found` → Ensure include step before CMake.
            - `ld: symbol(s) not found` → Missing source (e.g., pipeline.cpp, test_main).
            - `permission denied` → Check script execute bits (`chmod +x`).
            - `link.exe not found` → Install Visual Studio Build Tools or set PATH.

            🧠 CI Bot detected failure pattern and suggested remedies.
            The full build log was uploaded automatically.

      # 🟢 7. 성공 시 축하 코멘트 + 상태 배지
      - name: Comment on success
        if: success()
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🟢 **R3C Build Successful on ${{ matrix.os }}!**
            Everything compiled and linked without errors 🎉  

            | OS | Status | Badge |
            |----|---------|-------|
            | Ubuntu | ✅ Passed | ![Ubuntu](https://img.shields.io/badge/build-passed-brightgreen?logo=ubuntu) |
            | macOS | ✅ Passed | ![macOS](https://img.shields.io/badge/build-passed-brightgreen?logo=apple) |
            | Windows | ✅ Passed | ![Windows](https://img.shields.io/badge/build-passed-brightgreen?logo=windows) |

            ✅ Artifacts uploaded under `r3c-${{ matrix.os }}`.

      # 📦 8. 빌드 로그 / 결과 업로드
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-build-log-${{ matrix.os }}
          path: build_log.txt

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            build/bin/r3c*
            !**/*.pdb
