name: üöÄ R3C Cross-Platform Build & Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: ‚öôÔ∏è Configure
        shell: bash
        run: cmake -B build -S . > build_log.txt 2>&1

      - name: üß± Build
        shell: bash
        run: cmake --build build --config Release -j4 >> build_log.txt 2>&1

      - name: üì¶ Package artifacts
        shell: bash
        run: |
          mkdir -p release
          if [ "$RUNNER_OS" = "Windows" ]; then
            cp build/Release/r3c.exe release/
            zip -r r3c_windows.zip release
          elif [ "$RUNNER_OS" = "macOS" ]; then
            cp build/r3c release/
            zip -r r3c_macos.zip release
          else
            cp build/r3c release/
            tar -czf r3c_linux.tar.gz release
          fi

      - name: ‚òÅÔ∏è Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: r3c-${{ matrix.os }}
          path: |
            r3c_linux.tar.gz
            r3c_macos.zip
            r3c_windows.zip
          if-no-files-found: ignore

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üì§ Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/r3c_linux.tar.gz
            **/r3c_macos.zip
            **/r3c_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
